name: Checks
on: [push, pull_request]
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 20
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: "Use Node ${{ matrix.node }}"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ matrix.node }}"
          cache: yarn
      - name: Extract Solana versions
        uses: solana-developers/github-actions/extract-versions@v0.2.5
        id: versions
      - name: Setup Anchor & Solana
        uses: solana-developers/github-actions/setup-all@v0.2.5
        with:
          anchor_version: ${{ steps.versions.outputs.anchor_version }}
          solana_version: ${{ steps.versions.outputs.solana_version }}
          node_version: ${{ matrix.node }}
      - name: Install Cargo toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustc, rustfmt
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Install packages
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Lint js
        shell: bash
        run: yarn lint-js
      - name: Lint solidity
        shell: bash
        run: yarn lint-solidity
      - name: Lint rust
        shell: bash
        run: yarn lint-rust
  test-evm:
    name: Test EVM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 20
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: "Use Node ${{ matrix.node }}"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ matrix.node }}"
          cache: yarn
      - name: Install packages
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Build EVM
        run: yarn build-evm
      - name: Test evm-hardhat
        shell: bash
        run: yarn test-evm
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 20
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: "Use Node ${{ matrix.node }}"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ matrix.node }}"
          cache: yarn
      - name: Extract Solana versions
        uses: solana-developers/github-actions/extract-versions@v0.2.5
        id: versions
      - name: Setup Anchor & Solana
        uses: solana-developers/github-actions/setup-all@v0.2.5
        with:
          anchor_version: ${{ steps.versions.outputs.anchor_version }}
          solana_version: ${{ steps.versions.outputs.solana_version }}
          node_version: ${{ matrix.node }}
      - name: Install Cargo toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustc
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Install packages
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Test evm-hardhat
        shell: bash
        run: yarn test-evm
      - name: Test svm-anchor
        shell: bash
        run: yarn test-svm
  test-svm-verified:
    name: Test verified SVM build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 20
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: "Use Node ${{ matrix.node }}"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ matrix.node }}"
          cache: yarn
      - name: Extract Solana versions
        uses: solana-developers/github-actions/extract-versions@v0.2.5
        id: versions
      - name: Setup Anchor & Solana
        uses: solana-developers/github-actions/setup-all@v0.2.5
        with:
          anchor_version: ${{ steps.versions.outputs.anchor_version }}
          solana_version: ${{ steps.versions.outputs.solana_version }}
          verify_version: 0.4.3
          node_version: ${{ matrix.node }}
      - name: Install Cargo toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustc
      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
      - name: Install packages
        run: yarn install --frozen-lockfile --ignore-scripts
      # Above cargo cache only applies to dependencies that are not reused in the verified docker build, hence we need
      # to manually cache the verified build artifacts if the program source code has not changed.
      - name: Cache verified test build artifacts
        id: verified-test-build-cache
        uses: actions/cache@v4
        with:
          path: |
            target/deploy
            target/idl
            target/types
            src/svm/assets
            src/svm/clients
          key: v0-verified-test-build-${{ runner.os }}-${{ hashFiles('Cargo.lock', 'programs/**/Cargo.toml', 'programs/**/Xargo.toml', 'programs/**/*.rs') }}
      - name: Create verified build
        if: steps.verified-test-build-cache.outputs.cache-hit != 'true'
        env:
          IS_TEST: true
        run: yarn build-solana-verify
      - name: Test verified SVM build
        run: anchor test --skip-build
  forge:
    name: Forge
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 20
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: "Use Node ${{ matrix.node }}"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ matrix.node }}"
          cache: yarn
      - name: Install packages
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Install forge dependencies
        run: forge install
      - name: Inspect storage layouts
        run: ./scripts/checkStorageLayout.sh
      - name: Test evm-foundry
        run: forge test --match-path test/evm/foundry/local/**/*.t.sol
